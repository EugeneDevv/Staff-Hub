// <auto-generated />
using System;
using Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240430120016_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.Entities.Certification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CertificateLink")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("ExpiryMonth")
                        .HasColumnType("text");

                    b.Property<int?>("ExpiryYear")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOngoing")
                        .HasColumnType("boolean");

                    b.Property<string>("IssueMonth")
                        .HasColumnType("text");

                    b.Property<int?>("IssueYear")
                        .HasColumnType("integer");

                    b.Property<string>("Issuer")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("Api.Models.Entities.Clients", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ClientId"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            ClientName = "ACL",
                            IsDeleted = false
                        },
                        new
                        {
                            ClientId = 2,
                            ClientName = "Howard",
                            IsDeleted = false
                        },
                        new
                        {
                            ClientId = 3,
                            ClientName = "Chick-Fil-A",
                            IsDeleted = false
                        },
                        new
                        {
                            ClientId = 4,
                            ClientName = "RAM",
                            IsDeleted = false
                        },
                        new
                        {
                            ClientId = 5,
                            ClientName = "Internal Project",
                            IsDeleted = false
                        },
                        new
                        {
                            ClientId = 6,
                            ClientName = "PRISIM",
                            IsDeleted = false
                        },
                        new
                        {
                            ClientId = 7,
                            ClientName = "CelebriAI",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Api.Models.Entities.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AreaOfStudy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EndMonth")
                        .HasColumnType("text");

                    b.Property<int?>("EndYear")
                        .HasColumnType("integer");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsContinuing")
                        .HasColumnType("boolean");

                    b.Property<string>("LevelOfEducation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StartMonth")
                        .HasColumnType("text");

                    b.Property<int?>("StartYear")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Api.Models.Entities.Experience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOngoing")
                        .HasColumnType("boolean");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("endMonth")
                        .HasColumnType("text");

                    b.Property<int?>("endYear")
                        .HasColumnType("integer");

                    b.Property<string>("startMonth")
                        .HasColumnType("text");

                    b.Property<int?>("startYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("Api.Models.Entities.ProjectRole", b =>
                {
                    b.Property<int>("ProjectRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ProjectRoleId"));

                    b.Property<string>("ProjectRoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("deleted")
                        .HasColumnType("boolean");

                    b.HasKey("ProjectRoleId");

                    b.ToTable("ProjectRole");

                    b.HasData(
                        new
                        {
                            ProjectRoleId = 1,
                            ProjectRoleName = "Developer",
                            deleted = false
                        },
                        new
                        {
                            ProjectRoleId = 2,
                            ProjectRoleName = "Business Analyst",
                            deleted = false
                        },
                        new
                        {
                            ProjectRoleId = 3,
                            ProjectRoleName = "QA/QE",
                            deleted = false
                        },
                        new
                        {
                            ProjectRoleId = 4,
                            ProjectRoleName = "Scrum Master",
                            deleted = false
                        },
                        new
                        {
                            ProjectRoleId = 5,
                            ProjectRoleName = "RPA Developer",
                            deleted = false
                        },
                        new
                        {
                            ProjectRoleId = 6,
                            ProjectRoleName = "Solution Delivery Leader",
                            deleted = false
                        },
                        new
                        {
                            ProjectRoleId = 7,
                            ProjectRoleName = "Solution Architect",
                            deleted = false
                        });
                });

            modelBuilder.Entity("Api.Models.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("ProjectId"));

                    b.Property<int>("ClientsId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientsId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            ClientsId = 3,
                            IsDeleted = false,
                            ProjectName = "DRB"
                        },
                        new
                        {
                            ProjectId = 2,
                            ClientsId = 3,
                            IsDeleted = false,
                            ProjectName = "SC-MVP"
                        },
                        new
                        {
                            ProjectId = 3,
                            ClientsId = 3,
                            IsDeleted = false,
                            ProjectName = "Data Exchange QA Automation"
                        },
                        new
                        {
                            ProjectId = 4,
                            ClientsId = 6,
                            IsDeleted = false,
                            ProjectName = "PRISM HR"
                        },
                        new
                        {
                            ProjectId = 5,
                            ClientsId = 2,
                            IsDeleted = false,
                            ProjectName = "Advisor Portal"
                        },
                        new
                        {
                            ProjectId = 6,
                            ClientsId = 2,
                            IsDeleted = false,
                            ProjectName = "401K Optimizer"
                        },
                        new
                        {
                            ProjectId = 7,
                            ClientsId = 2,
                            IsDeleted = false,
                            ProjectName = "TSP Optimizer"
                        },
                        new
                        {
                            ProjectId = 8,
                            ClientsId = 2,
                            IsDeleted = false,
                            ProjectName = "HCM Fund Site"
                        },
                        new
                        {
                            ProjectId = 9,
                            ClientsId = 2,
                            IsDeleted = false,
                            ProjectName = "ETFs Site"
                        },
                        new
                        {
                            ProjectId = 10,
                            ClientsId = 2,
                            IsDeleted = false,
                            ProjectName = "Marketing Site"
                        },
                        new
                        {
                            ProjectId = 11,
                            ClientsId = 1,
                            IsDeleted = false,
                            ProjectName = "Legacy"
                        },
                        new
                        {
                            ProjectId = 12,
                            ClientsId = 1,
                            IsDeleted = false,
                            ProjectName = "Bot"
                        },
                        new
                        {
                            ProjectId = 13,
                            ClientsId = 1,
                            IsDeleted = false,
                            ProjectName = "CAP"
                        },
                        new
                        {
                            ProjectId = 14,
                            ClientsId = 7,
                            IsDeleted = false,
                            ProjectName = "File Tracker"
                        },
                        new
                        {
                            ProjectId = 15,
                            ClientsId = 7,
                            IsDeleted = false,
                            ProjectName = "ATQ V2"
                        },
                        new
                        {
                            ProjectId = 16,
                            ClientsId = 5,
                            IsDeleted = false,
                            ProjectName = "GER "
                        });
                });

            modelBuilder.Entity("Api.Models.Entities.SecurityAnswer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Answer")
                        .HasColumnType("text");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("AnswerId");

                    b.ToTable("SecurityAnswers");
                });

            modelBuilder.Entity("Api.Models.Entities.SecurityQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("QuestionId");

                    b.ToTable("SecurityQuestions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionName = "What's your mother's Maiden name?"
                        },
                        new
                        {
                            QuestionId = 2,
                            QuestionName = "What's the name of your pet?"
                        },
                        new
                        {
                            QuestionId = 3,
                            QuestionName = "In which city were you born"
                        },
                        new
                        {
                            QuestionId = 4,
                            QuestionName = "Which high school did you attend"
                        },
                        new
                        {
                            QuestionId = 5,
                            QuestionName = "What was the name of your elementary school?"
                        },
                        new
                        {
                            QuestionId = 6,
                            QuestionName = "What was the make of your first car"
                        },
                        new
                        {
                            QuestionId = 7,
                            QuestionName = "What was your favorite food as a child?"
                        });
                });

            modelBuilder.Entity("Api.Models.Entities.Skills", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("deleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e219b4e3-104c-41ac-842a-2709052a5517"),
                            Name = "Java",
                            deleted = false
                        },
                        new
                        {
                            Id = new Guid("4c66e09a-de93-44dd-941b-28ab92333a30"),
                            Name = "React",
                            deleted = false
                        },
                        new
                        {
                            Id = new Guid("dee9f4f9-f455-41bc-812c-2d00d268416a"),
                            Name = "Python",
                            deleted = false
                        },
                        new
                        {
                            Id = new Guid("01f8a9df-2b45-4623-a1b8-75d4fb97bcb4"),
                            Name = "Cypress",
                            deleted = false
                        },
                        new
                        {
                            Id = new Guid("f2e19442-242d-4f55-b643-6611ff02d9ea"),
                            Name = "AWS-CCP",
                            deleted = false
                        });
                });

            modelBuilder.Entity("Api.Models.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("Otp")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("SecurityQuestion")
                        .HasColumnType("boolean");

                    b.Property<bool>("Suspended")
                        .HasColumnType("boolean");

                    b.Property<string>("SuspensionReason")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("18619479-22fb-4d4d-ba23-b82a98cf8f46"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 10, 321, DateTimeKind.Utc).AddTicks(7164),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 10, 321, DateTimeKind.Utc).AddTicks(7168),
                            Deleted = false,
                            Email = "user1@griffinglobaltech.com",
                            FirstName = "Victor",
                            LastName = "Patrick",
                            Otp = 0,
                            Password = "$2a$11$K6kYbrHtL9AyqE/cqgH2BOr/0TteDNE6bS.jvowCixS0uf0pZ8nTK",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("124fe2e4-c1d1-4201-8d1b-cab77d29a931"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 10, 543, DateTimeKind.Utc).AddTicks(623),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 10, 543, DateTimeKind.Utc).AddTicks(630),
                            Deleted = false,
                            Email = "user2@griffinglobaltech.com",
                            FirstName = "Alice",
                            LastName = "Kate",
                            Otp = 0,
                            Password = "$2a$11$MQUqy/up42tr7GGvzKIoieTMRWeJAyNcdyV5EodmllwIMtHN34qty",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("63e4535a-e62d-4883-be3d-619f8503ba10"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 10, 819, DateTimeKind.Utc).AddTicks(3564),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 10, 819, DateTimeKind.Utc).AddTicks(3568),
                            Deleted = false,
                            Email = "user3@griffinglobaltech.com",
                            FirstName = "Zane",
                            LastName = "Wendy",
                            Otp = 0,
                            Password = "$2a$11$DCgA8t0wZAAC3laSwPH0yuwEt.1AYWErcfwZdkTL36dIDN66xWG/K",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("212006a4-a354-4b49-b779-aa0c37f5d13f"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 11, 61, DateTimeKind.Utc).AddTicks(8923),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 11, 61, DateTimeKind.Utc).AddTicks(8931),
                            Deleted = false,
                            Email = "user4@griffinglobaltech.com",
                            FirstName = "Kate",
                            LastName = "Alice",
                            Otp = 0,
                            Password = "$2a$11$NWRRF2ZsIbpLrPLrniWafer8gOY3OtZ/VCDX7MMXQ9Qawms7FiGga",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("9662d61c-fa8b-4ffd-a419-fc2541655e43"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 11, 291, DateTimeKind.Utc).AddTicks(3926),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 11, 291, DateTimeKind.Utc).AddTicks(3931),
                            Deleted = false,
                            Email = "user5@griffinglobaltech.com",
                            FirstName = "Wendy",
                            LastName = "Ella",
                            Otp = 0,
                            Password = "$2a$11$uv1u36S0k8n4uhJE98RKvuvnR7bueLiEgiwrWc6M1RnK/LKvBC8Cq",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("ac492e48-6ac9-4738-a974-0b741f0524d2"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 11, 495, DateTimeKind.Utc).AddTicks(5856),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 11, 495, DateTimeKind.Utc).AddTicks(5861),
                            Deleted = false,
                            Email = "user6@griffinglobaltech.com",
                            FirstName = "Patrick",
                            LastName = "Liam",
                            Otp = 0,
                            Password = "$2a$11$F1XvdPRXmkXRVxSHUGd78u/ldWIlW6sFHswDkBGaAvoBG/0i5YvgC",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("5f4c3204-5c8a-462d-8bf4-41acc6e41755"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 11, 705, DateTimeKind.Utc).AddTicks(8119),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 11, 705, DateTimeKind.Utc).AddTicks(8123),
                            Deleted = false,
                            Email = "user7@griffinglobaltech.com",
                            FirstName = "Wendy",
                            LastName = "Nathan",
                            Otp = 0,
                            Password = "$2a$11$nxmLGB55M4az5MfBNmn0ZeYheJHp8K94F6NcLJ5lmFrYP2UiRxsfS",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("423e8df4-dd01-45c1-956f-446bcad2448f"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 11, 923, DateTimeKind.Utc).AddTicks(5144),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 11, 923, DateTimeKind.Utc).AddTicks(5158),
                            Deleted = false,
                            Email = "user8@griffinglobaltech.com",
                            FirstName = "Henry",
                            LastName = "Xavier",
                            Otp = 0,
                            Password = "$2a$11$PnHreXkHQQu4h8ooQ/icN.Rq88gMw8JBLoKJFCr2FaOTqNuYhFAdO",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("6577c446-5a5f-4698-9486-3e907b703f00"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 12, 115, DateTimeKind.Utc).AddTicks(6445),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 12, 115, DateTimeKind.Utc).AddTicks(6454),
                            Deleted = false,
                            Email = "user9@griffinglobaltech.com",
                            FirstName = "Xavier",
                            LastName = "Frank",
                            Otp = 0,
                            Password = "$2a$11$fz7iEEzOOTIyPxF/IgEe/ePg3cF.cDIOrRVvBYhj3dPY0CCgUUpYq",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("55c6b08b-ab29-45a3-9d2d-692f0b779e43"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 12, 293, DateTimeKind.Utc).AddTicks(5515),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 12, 293, DateTimeKind.Utc).AddTicks(5520),
                            Deleted = false,
                            Email = "user10@griffinglobaltech.com",
                            FirstName = "Victor",
                            LastName = "Wendy",
                            Otp = 0,
                            Password = "$2a$11$l7Nr1sNtMl/qBFRSe0m8X.0BEdUa2NGVhmcMjP6s2a9vjns7yNmQW",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("492986eb-6b14-448e-bb5a-ef160139641b"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 12, 478, DateTimeKind.Utc).AddTicks(9007),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 12, 478, DateTimeKind.Utc).AddTicks(9013),
                            Deleted = false,
                            Email = "user11@griffinglobaltech.com",
                            FirstName = "Samuel",
                            LastName = "Olivia",
                            Otp = 0,
                            Password = "$2a$11$XucF7gK2pAf5Nw5aaWbm4es8ybtFLSHEVhyhWhOPLMt5vI4qp.wRm",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("4affac57-e571-460b-9556-0c08f33c924e"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 12, 708, DateTimeKind.Utc).AddTicks(7934),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 12, 708, DateTimeKind.Utc).AddTicks(7943),
                            Deleted = false,
                            Email = "user12@griffinglobaltech.com",
                            FirstName = "Mia",
                            LastName = "Zane",
                            Otp = 0,
                            Password = "$2a$11$2fvhjQB39XqhpNgKCk1Uluh6l7Ap/ZAwKqrfp6sHlUQeNny9JXyci",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("c8f18212-97a1-4e23-8939-1973a245cc42"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 12, 943, DateTimeKind.Utc).AddTicks(8428),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 12, 943, DateTimeKind.Utc).AddTicks(8434),
                            Deleted = false,
                            Email = "user13@griffinglobaltech.com",
                            FirstName = "Quinn",
                            LastName = "Charlie",
                            Otp = 0,
                            Password = "$2a$11$7lo2YEeR5RdnbltuTYKqhO1k4oDZQXePcZpZ.rRHtkK9BQBfw/2hy",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("9bc02bfd-b22e-48a4-863a-91e8355f65bb"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 13, 144, DateTimeKind.Utc).AddTicks(1129),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 13, 144, DateTimeKind.Utc).AddTicks(1133),
                            Deleted = false,
                            Email = "user14@griffinglobaltech.com",
                            FirstName = "Ella",
                            LastName = "Liam",
                            Otp = 0,
                            Password = "$2a$11$SNI3NNEV0udLp1alTaoQ2eCQbCM/YF1323f.m0bHvPjD.pIve724K",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("73462e36-86ff-4558-b676-2f9c9c01e1c2"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 13, 361, DateTimeKind.Utc).AddTicks(4820),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 13, 361, DateTimeKind.Utc).AddTicks(4825),
                            Deleted = false,
                            Email = "user15@griffinglobaltech.com",
                            FirstName = "Grace",
                            LastName = "Samuel",
                            Otp = 0,
                            Password = "$2a$11$lENnd5s8lspe1AYOJVnZQupqeMOS07rO1UIqmoqCmAld2oozv0egy",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("50e353f8-f8fd-4065-902a-503c5657a6a5"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 13, 584, DateTimeKind.Utc).AddTicks(3242),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 13, 584, DateTimeKind.Utc).AddTicks(3250),
                            Deleted = false,
                            Email = "user16@griffinglobaltech.com",
                            FirstName = "Victor",
                            LastName = "Xavier",
                            Otp = 0,
                            Password = "$2a$11$Z6sY.lmtrRB5w7MAqsIjou.atumD7X0s4Sbc5DjLTyJCwQdZc4ffy",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("175d8ed0-70d7-4e14-8bdc-6a419b839c01"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 13, 800, DateTimeKind.Utc).AddTicks(9513),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 13, 800, DateTimeKind.Utc).AddTicks(9518),
                            Deleted = false,
                            Email = "user17@griffinglobaltech.com",
                            FirstName = "Alice",
                            LastName = "Samuel",
                            Otp = 0,
                            Password = "$2a$11$9QULDLnY75LNX10N1okmD.ZPCElQOfMK1vSIeNwyk8ghne/UTwbVq",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("e2b59d17-ad2d-4013-a469-ac4820f99de9"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 13, 993, DateTimeKind.Utc).AddTicks(4654),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 13, 993, DateTimeKind.Utc).AddTicks(4659),
                            Deleted = false,
                            Email = "user18@griffinglobaltech.com",
                            FirstName = "Taylor",
                            LastName = "Alice",
                            Otp = 0,
                            Password = "$2a$11$p6fVhp64NVV2Uq3YZM/Q4uBn2k0Za095I2/7PC9u4WHASlQhCkIQu",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("3c1f1d59-2057-46c0-a0c3-541536c8110d"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 14, 185, DateTimeKind.Utc).AddTicks(5733),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 14, 185, DateTimeKind.Utc).AddTicks(5737),
                            Deleted = false,
                            Email = "user19@griffinglobaltech.com",
                            FirstName = "David",
                            LastName = "Alice",
                            Otp = 0,
                            Password = "$2a$11$F6idK2OInTCCy3deknR5kuk/z9y2nW4OuasHYZNNn86hAnEQChbD.",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("a7776fa8-2270-412d-beb8-ecd1b7dc4639"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 14, 359, DateTimeKind.Utc).AddTicks(1515),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 14, 359, DateTimeKind.Utc).AddTicks(1522),
                            Deleted = false,
                            Email = "user20@griffinglobaltech.com",
                            FirstName = "Xavier",
                            LastName = "Kate",
                            Otp = 0,
                            Password = "$2a$11$I5EFxRDFRcj0sBtpwQgcm.tlq90QPtLxy4WUH/6pWCQk3gnkmFLr.",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("6d5f4f5f-afbb-4561-a37c-82810caa8916"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 14, 554, DateTimeKind.Utc).AddTicks(3253),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 14, 554, DateTimeKind.Utc).AddTicks(3258),
                            Deleted = false,
                            Email = "user21@griffinglobaltech.com",
                            FirstName = "Grace",
                            LastName = "Olivia",
                            Otp = 0,
                            Password = "$2a$11$lc0P5K0OzqpT.8ZTE1xpveplzmSIq/RTXSBBc0IBCfTbEPNjR95au",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("f773aa0c-0727-4431-99fd-327b9fb12d18"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 14, 748, DateTimeKind.Utc).AddTicks(3312),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 14, 748, DateTimeKind.Utc).AddTicks(3316),
                            Deleted = false,
                            Email = "user22@griffinglobaltech.com",
                            FirstName = "Alice",
                            LastName = "Patrick",
                            Otp = 0,
                            Password = "$2a$11$.b5Me/yRocO.qJaiukdkPOl1Iuzgrw2CYFy2hor2w0W4GOTN6AMBi",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("5b2d249e-21a5-4ecd-9312-839eb051975b"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 14, 943, DateTimeKind.Utc).AddTicks(3231),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 14, 943, DateTimeKind.Utc).AddTicks(3236),
                            Deleted = false,
                            Email = "user23@griffinglobaltech.com",
                            FirstName = "Taylor",
                            LastName = "David",
                            Otp = 0,
                            Password = "$2a$11$3dr2MpB/IzaCygX4neUi3OuKn9GNCxzeVHJsm9BfYQEOQeTIABbXO",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("9ea9cf59-dee1-478b-9989-094ba7a46a73"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 15, 134, DateTimeKind.Utc).AddTicks(605),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 15, 134, DateTimeKind.Utc).AddTicks(609),
                            Deleted = false,
                            Email = "user24@griffinglobaltech.com",
                            FirstName = "Victor",
                            LastName = "Wendy",
                            Otp = 0,
                            Password = "$2a$11$XntEEp1za/UsZTSHKuufu.mpvrwEhUYf8cJMrSJdBsk98fsv/.7gC",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        },
                        new
                        {
                            UserId = new Guid("1ef0eb62-4aaf-4aec-b500-2f38f262f47d"),
                            AccountStatus = "new",
                            DateCreated = new DateTime(2024, 4, 30, 12, 0, 15, 306, DateTimeKind.Utc).AddTicks(1204),
                            DateUpdated = new DateTime(2024, 4, 30, 12, 0, 15, 306, DateTimeKind.Utc).AddTicks(1210),
                            Deleted = false,
                            Email = "user25@griffinglobaltech.com",
                            FirstName = "Zane",
                            LastName = "Taylor",
                            Otp = 0,
                            Password = "$2a$11$RqXdsJ4fRQin5RHyuOGbPOOo8z3Lu9PqaI/roFG4woqQT1niHF0CW",
                            PhoneNumber = "123-456-7890",
                            ProfileStatus = "pending",
                            Role = "User",
                            SecurityQuestion = false,
                            Suspended = false
                        });
                });

            modelBuilder.Entity("Api.Models.Entities.UserProjectRole", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("EndMonth")
                        .HasColumnType("text");

                    b.Property<int?>("EndYear")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsContinuing")
                        .HasColumnType("boolean");

                    b.Property<string>("StartMonth")
                        .HasColumnType("text");

                    b.Property<int?>("StartYear")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ProjectId", "ProjectRoleId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectRoleId");

                    b.ToTable("UserProjectRoles");
                });

            modelBuilder.Entity("Api.Models.Entities.UserSkill", b =>
                {
                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("ProficiencyLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("Api.Models.Entities.Certification", b =>
                {
                    b.HasOne("Api.Models.Entities.User", "User")
                        .WithMany("Certifications")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api.Models.Entities.Education", b =>
                {
                    b.HasOne("Api.Models.Entities.User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api.Models.Entities.Experience", b =>
                {
                    b.HasOne("Api.Models.Entities.User", "User")
                        .WithMany("Experiences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api.Models.Entities.Projects", b =>
                {
                    b.HasOne("Api.Models.Entities.Clients", "Clients")
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Api.Models.Entities.UserProjectRole", b =>
                {
                    b.HasOne("Api.Models.Entities.Projects", "Projects")
                        .WithMany("UserProjectRoles")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Entities.ProjectRole", "ProjectRole")
                        .WithMany("UserProjectRoles")
                        .HasForeignKey("ProjectRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Entities.User", "User")
                        .WithMany("UserProjectRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectRole");

                    b.Navigation("Projects");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api.Models.Entities.UserSkill", b =>
                {
                    b.HasOne("Api.Models.Entities.Skills", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Api.Models.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api.Models.Entities.ProjectRole", b =>
                {
                    b.Navigation("UserProjectRoles");
                });

            modelBuilder.Entity("Api.Models.Entities.Projects", b =>
                {
                    b.Navigation("UserProjectRoles");
                });

            modelBuilder.Entity("Api.Models.Entities.Skills", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("Api.Models.Entities.User", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("UserProjectRoles");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
